//
//  ListGifsPresenter.swift
//  GiphyApp
//
//  Created by asylzhan on 11/4/17.
//  Copyright (c) 2017 asylzhan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FLAnimatedImage


protocol ListGifsPresentationLogic {
    func presentFetchedTrendingGifs(response: ListGifs.FetchGifs.Response)
    func presentFetchedSearchedGifs(response: ListGifs.FetchGifs.Response)
    func presentFetchedManagedGifs(response: ListGifs.FetchManagedGifs.Response)
}

class ListGifsPresenter: ListGifsPresentationLogic {
    weak var viewController: ListGifsDisplayLogic?
    
    // MARK: Present fetched trending gifs
    
    func presentFetchedTrendingGifs(response: ListGifs.FetchGifs.Response) {
        let displayedGifs = convertGifs(gifs: response.gifs)
        let viewModel = ListGifs.FetchGifs.ViewModel(displayedGifs: displayedGifs)
        self.viewController?.displayFetchedTrendingGifs(viewModel: viewModel)
    }
    
    // MARK: Present fetched searched gifs
    
    func presentFetchedSearchedGifs(response: ListGifs.FetchGifs.Response) {
        let displayedGifs = convertGifs(gifs: response.gifs)
        let viewModel = ListGifs.FetchGifs.ViewModel(displayedGifs: displayedGifs)
        self.viewController?.displaySearchedGifs(viewModel: viewModel)
    }
    
    func convertGifs(gifs: [Gif]) -> [ListGifs.FetchGifs.ViewModel.DisplayedGif] {
        return gifs.map { ListGifs.FetchGifs.ViewModel.DisplayedGif(id: $0.id, url: $0.url) }
    }
    
    // MARK: Present fetched managed gifs
    
    func presentFetchedManagedGifs(response: ListGifs.FetchManagedGifs.Response) {
        let displayedAnimatedImages = convertManagedGifs(data: response.gifImages)
        let viewModel = ListGifs.FetchManagedGifs.ViewModel(displayedGifImages: displayedAnimatedImages)
        self.viewController?.displayFetchedManagedGifs(viewModel: viewModel)
    }
    
    func convertManagedGifs(data images: [Data]) -> [ListGifs.FetchManagedGifs.ViewModel.DisplayedAnimatedImage] {
        return images.map { ListGifs.FetchManagedGifs.ViewModel.DisplayedAnimatedImage(gifImage: $0) }
    }

}
